<?xml version="1.0"?>

<workflow-definition
        xmlns="urn:liferay.com:liferay-workflow_7.4.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="urn:liferay.com:liferay-workflow_7.4.0 http://www.liferay.com/dtd/liferay-workflow-definition_7_4_0.xsd"
>
    <version>20</version>
    <condition>
        <id>Is User Available</id>
        <description>Execute conditional logic.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						-43,
						488
					]
				}
			]]>
        </metadata>
        <labels>
            <label language-id="en_US">
                Is User Available
            </label>
        </labels>
        <script>
            <![CDATA[import com.liferay.portal.kernel.util.GetterUtil
import com.liferay.portal.kernel.workflow.WorkflowConstants
import com.liferay.portal.kernel.workflow.WorkflowHandler
import com.liferay.portal.kernel.workflow.WorkflowHandlerRegistryUtil
import com.liferay.portal.kernel.service.ServiceContext
import com.liferay.dynamic.data.mapping.storage.DDMFormFieldValue
import com.liferay.asset.kernel.model.AssetRendererFactory
import com.liferay.asset.kernel.model.AssetRenderer
import com.liferay.portal.kernel.model.User
import com.liferay.portal.kernel.service.UserLocalServiceUtil

import java.util.List;import java.util.Locale;

long companyId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID))

ServiceContext serviceContext = (ServiceContext)workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT)
long classPK = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK))

String className = (String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME)
WorkflowHandler workflowHandler = WorkflowHandlerRegistryUtil.getWorkflowHandler(className)
AssetRendererFactory assetRendererFactory = workflowHandler.getAssetRendererFactory()
AssetRenderer assetRenderer = workflowHandler.getAssetRenderer(classPK)
Locale locale = serviceContext.getLocale()

List<DDMFormFieldValue>values
values = assetRenderer.getAssetObject().getDDMFormValues().getDDMFormFieldValues()

String email = ''

for (DDMFormFieldValue value:values) { if (value.getDDMFormField().getLabel() != null && value.getValue() != null)
    {
        if (value.getDDMFormField().getLabel().getString(locale).equals('Email Address')) {
            email = value.getValue().getString(locale)
        }
    }
}
roles = null
user = UserLocalServiceUtil.fetchUserByEmailAddress(companyId, email)

if (user != null ) {
    com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(com.liferay.portal.kernel.workflow.WorkflowConstants.getLabelStatus('rejected'), workflowContext)
    returnValue = 'Available User'
}
else
 returnValue = 'New User'

System.out.print(returnValue)

return
]]>
        </script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <labels>
                    <label language-id="en_US">
                        New User
                    </label>
                </labels>
                <id>New User</id>
                <target>Review</target>
                <default>true</default>
            </transition>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Available User
                    </label>
                </labels>
                <id>Available User</id>
                <target>rejected</target>
                <default>false</default>
            </transition>
        </transitions>
    </condition>
    <condition>
        <id>Create User</id>
        <description>Execute conditional logic.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						632.955322265625,
						199
					]
				}
			]]>
        </metadata>
        <labels>
            <label language-id="en_US">
                Create User
            </label>
        </labels>
        <script>
            <![CDATA[import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
import com.liferay.portal.kernel.model.Role;
import com.liferay.portal.kernel.model.Company;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.service.CompanyLocalServiceUtil;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import java.util.Calendar;
import java.util.GregorianCalendar;
import com.liferay.portal.kernel.util.GetterUtil;

long groupId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_GROUP_ID));
long companyId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
Company company = CompanyLocalServiceUtil.getCompany(companyId);
String portalURL = company.getPortalURL(groupId);
final long creatorUserId = GetterUtil.getLong((String)workflowContext.get("adminUserId"));


ServiceContext serviceContext  = new ServiceContext();
serviceContext.setCompanyId(companyId);
serviceContext.setUserId(creatorUserId);
serviceContext.setPortalURL(portalURL);
serviceContext.setPathMain(PortalUtil.getPathMain());
serviceContext.setScopeGroupId(groupId);

final boolean autoPassword = false;
final String tempPassword = "test";
final boolean autoScreenName = true;
final boolean male = false;
final boolean sendAccountCreationEmail = false;
final long prefixId = -1L;
final long suffixId = -1L;
final long[] siteIds = [ groupId ];
final Calendar dob = new GregorianCalendar(1970, 1, 1);
locale = LocaleUtil.getDefault();

User newUser = UserLocalServiceUtil.addUser(serviceContext.getUserId(), companyId, autoPassword, tempPassword, tempPassword,
        autoScreenName, null, workflowContext.get("email"), locale, workflowContext.get("firstName"), null,
        workflowContext.get("lastName"), prefixId, suffixId, male, (dob.get(Calendar.MONTH) - 1),
        dob.get(Calendar.DATE), dob.get(Calendar.YEAR), null, siteIds, null, null, null, sendAccountCreationEmail,
        serviceContext);

Role role = RoleLocalServiceUtil.fetchRole(80647).cloneWithOriginalValues();
role.setTitle(workflowContext.get("companyName"));
role.setName(workflowContext.get("companyName"));
Role newRole = RoleLocalServiceUtil.addRole(
        role.getUserId(),
        role.getClassName(),
        role.getClassPK(),
        workflowContext.get("companyName"),
        role.getTitleMap(),
        role.getDescriptionMap(),
        role.getType(),
        role. getSubtype(),
        serviceContext);

System.out.println("user role id: " +  newRole.getRoleId());
UserLocalServiceUtil.addRoleUser(87262L,newUser.getUserId())
UserLocalServiceUtil.addRoleUser(newRole.getRoleId(),newUser.getUserId());

workflowContext.put("userRole",newRole.getRoleId());

returnValue = "User Created"]]>
        </script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <labels>
                    <label language-id="en_US">
                        error
                    </label>
                </labels>
                <id>error</id>
                <target>Denied</target>
                <default>true</default>
            </transition>
            <transition>
                <labels>
                    <label language-id="en_US">
                        User Created
                    </label>
                </labels>
                <id>User Created</id>
                <target>506fddcd-b209-4519-89a1-2aecb78bcd68</target>
                <default>true</default>
            </transition>
        </transitions>
    </condition>
    <condition>
        <id>506fddcd-b209-4519-89a1-2aecb78bcd68</id>
        <description>Execute conditional logic.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						771.0546875,
						54.5
					]
				}
			]]>
        </metadata>
        <labels>
            <label language-id="en_US">
                Create Product Catalog
            </label>
        </labels>
        <script>
            <![CDATA[import com.liferay.portal.kernel.model.Company;
import com.liferay.portal.kernel.security.permission.PermissionThreadLocal;
import com.liferay.portal.kernel.service.CompanyLocalServiceUtil;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.security.auth.PrincipalThreadLocal;
import com.liferay.portal.kernel.security.permission.PermissionChecker;
long groupId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_GROUP_ID));
long companyId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
Company company = CompanyLocalServiceUtil.getCompany(companyId);
String portalURL = company.getPortalURL(groupId);
final long creatorUserId = GetterUtil.getLong((String)workflowContext.get("adminUserId"));




ServiceContext serviceContext  = new ServiceContext();
serviceContext.setCompanyId(companyId);
serviceContext.setUserId(creatorUserId);
serviceContext.setPortalURL(portalURL);
serviceContext.setPathMain(PortalUtil.getPathMain());
serviceContext.setScopeGroupId(groupId);


import com.liferay.commerce.product.service.CommerceCatalogServiceUtil;
import com.liferay.commerce.product.model.CommerceCatalog;
import com.liferay.portal.kernel.security.permission.PermissionCheckerFactoryUtil;
import com.liferay.portal.kernel.model.Role;
import com.liferay.portal.kernel.service.ResourcePermissionServiceUtil;

Role adminRole = RoleLocalServiceUtil.getRole(company.getCompanyId(),"Administrator");
List adminUsers = UserLocalServiceUtil.getRoleUsers(adminRole.getRoleId());

PrincipalThreadLocal.setName(adminUsers[0].getUserId());
PermissionChecker permissionChecker =PermissionCheckerFactoryUtil.create(adminUsers.get(0));
PermissionThreadLocal.setPermissionChecker(permissionChecker);

CommerceCatalog newCatalog = CommerceCatalogServiceUtil.addCommerceCatalog(
        workflowContext.get("companyName"),
        workflowContext.get("companyName"),
        "SAR",
        "en_US",
        serviceContext);


long roleId = GetterUtil.getLong((String)workflowContext.get("userRole"));;
String className = newCatalog.getModelClassName();
String[] actionIds=["VIEW","UPDATE","DELETE"];

ResourcePermissionServiceUtil.setIndividualResourcePermissions(
        groupId,
        companyId,
        className,
        String.valueOf(newCatalog.getPrimaryKey()),
        roleId,
        actionIds
);

returnValue = "Product Catalog Created";]]>
        </script>
        <script-language>groovy</script-language>
        <transitions>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Product Catalog Created
                    </label>
                </labels>
                <id>Product Catalog Created</id>
                <target>approved</target>
                <default>true</default>
            </transition>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Error
                    </label>
                </labels>
                <id>Error</id>
                <target>Denied</target>
                <default>false</default>
            </transition>
        </transitions>
    </condition>
    <state>
        <id>StartNode</id>
        <description>Begin a workflow.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						-44,
						67
					]
				}
			]]>
        </metadata>
        <actions>
            <action>
                <name>Collect Form Data</name>
                <description></description>
                <script>
                    <![CDATA[import com.liferay.dynamic.data.mapping.model.DDMFormInstanceRecordVersion;
import com.liferay.dynamic.data.mapping.model.Value;
import com.liferay.dynamic.data.mapping.service.DDMFormInstanceRecordVersionLocalServiceUtil;
import com.liferay.dynamic.data.mapping.storage.DDMFormFieldValue;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import java.util.Locale;

def normaliseValue(String value) {
    if (value == null || "".equals(value)) {
        return value;
    }
    return value.replaceAll("\\[\"","").replaceAll("\"\\]","");
}
final long recVerId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));
final DDMFormInstanceRecordVersion recVer = DDMFormInstanceRecordVersionLocalServiceUtil.getFormInstanceRecordVersion(recVerId);
final Locale locale = recVer.getDDMForm().getDefaultLocale();
final List<DDMFormFieldValue> formFieldVals = recVer.getDDMFormValues().getDDMFormFieldValues();
for (DDMFormFieldValue fmval : formFieldVals) {
    final String fieldReference = fmval.getFieldReference();
    final Value val = fmval.getValue();
    final String data = normaliseValue(val.getString(Locale.ROOT));
    workflowContext.put(fieldReference, data);
}
workflowContext.put("recVerId", recVerId);
workflowContext.put("locale", locale);]]>
                </script>
                <script-language>groovy</script-language>
                <priority>2</priority>
                <execution-type>onEntry</execution-type>
            </action>
            <action>
                <name>get admin user id</name>
                <description></description>
                <script>
                    <![CDATA[import com.liferay.portal.kernel.service.UserLocalServiceUtil
import com.liferay.portal.kernel.util.PortalUtil
import com.liferay.portal.kernel.model.role.RoleConstants
import com.liferay.portal.kernel.model.User
import com.liferay.portal.kernel.model.Role
import java.util.Arrays

long administratorRoleId = 20103L
long[] users = UserLocalServiceUtil.getRoleUserIds(administratorRoleId)
workflowContext.put("adminUserId", users[0])


]]>
                </script>
                <script-language>groovy</script-language>
                <priority>1</priority>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <initial>true</initial>
        <labels>
            <label language-id="en_US">
                StartNode
            </label>
        </labels>
        <transitions>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Check User
                    </label>
                </labels>
                <id>Check User</id>
                <target>Is User Available</target>
                <default>true</default>
            </transition>
        </transitions>
    </state>
    <state>
        <id>rejected</id>
        <description>Conclude the workflow.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						516,
						490
					],
					"terminal": true
				}
			]]>
        </metadata>
        <actions>
            <action>
                <name>Rejected</name>
                <description>Rejected</description>
                <script>
                    <![CDATA[com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(com.liferay.portal.kernel.workflow.WorkflowConstants.getLabelStatus("rejected"), workflowContext);]]>
                </script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <labels>
            <label language-id="en_US">
                rejected
            </label>
        </labels>
    </state>
    <state>
        <id>approved</id>
        <description>Conclude the workflow.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						940,
						-84
					],
					"terminal": true
				}
			]]>
        </metadata>
        <actions>
            <action>
                <name>Approved</name>
                <description>Approved</description>
                <script>
                    <![CDATA[    com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(com.liferay.portal.kernel.workflow.WorkflowConstants.getLabelStatus("approved"), workflowContext);
]]>
                </script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <labels>
            <label language-id="en_US">
                approved
            </label>
        </labels>
    </state>
    <state>
        <id>Denied</id>
        <description>Conclude the workflow.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						958,
						427
					],
					"terminal": true
				}
			]]>
        </metadata>
        <actions>
            <action>
                <name></name>
                <script>
                    <![CDATA[com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(com.liferay.portal.kernel.workflow.WorkflowConstants.getLabelStatus("denied"), workflowContext);]]>
                </script>
                <script-language>groovy</script-language>
                <execution-type>onEntry</execution-type>
            </action>
        </actions>
        <labels>
            <label language-id="en_US">
                Denied
            </label>
        </labels>
    </state>
    <task>
        <id>Review</id>
        <description>Ask a user to work on the item.</description>
        <metadata>
            <![CDATA[
				{
					"xy": [
						318,
						-27
					]
				}
			]]>
        </metadata>
        <actions>
            <action>
                <name></name>
                <script>
                    <![CDATA[System.out.print("review state")]]>
                </script>
                <script-language>groovy</script-language>
                <execution-type>onAssignment</execution-type>
            </action>
            <notification>
                <name>Review Registration Request</name>
                <description>
                    <![CDATA[]]>
                </description>
                <template>
                    <![CDATA[A new Quotation Request has been sent]]>
                </template>
                <template-language>freemarker</template-language>
                <notification-type>user-notification</notification-type>
                <recipients receptionType="to">
                    <roles>
                        <role>
                            <role-type>regular</role-type>
                            <name>Agent</name>
                            <auto-create>true</auto-create>
                        </role>
                    </roles>
                </recipients>
                <execution-type>onAssignment</execution-type>
            </notification>
        </actions>
        <assignments>
            <roles>
                <role><role-id>20103</role-id></role>
            </roles>
        </assignments>
        <labels>
            <label language-id="en_US">
                Review
            </label>
        </labels>
        <transitions>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Reject
                    </label>
                </labels>
                <id>Reject</id>
                <target>rejected</target>
                <default>true</default>
            </transition>
            <transition>
                <labels>
                    <label language-id="en_US">
                        Approve
                    </label>
                </labels>
                <id>Approve</id>
                <target>Create User</target>
                <default>false</default>
            </transition>
        </transitions>
    </task>
</workflow-definition>
